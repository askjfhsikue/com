<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.dao.TIntegralMapper" >
  <resultMap id="BaseResultMap" type="test.entity.TIntegral" >
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="Integral_total" property="integralTotal" jdbcType="INTEGER" />
    <result column="Integral_residual" property="integralResidual" jdbcType="INTEGER" />
    <result column="Integral_consumption" property="integralConsumption" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, Integral_total, Integral_residual, Integral_consumption
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="test.entity.TIntegral" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="test.entity.TIntegral" >
    delete from t_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.entity.TIntegral" >
    insert into t_integral (user_id, Integral_total, Integral_residual, 
      Integral_consumption)
    values (#{userId,jdbcType=INTEGER}, #{integralTotal,jdbcType=INTEGER}, #{integralResidual,jdbcType=INTEGER}, 
      #{integralConsumption,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="test.entity.TIntegral" >
    insert into t_integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="integralTotal != null" >
        Integral_total,
      </if>
      <if test="integralResidual != null" >
        Integral_residual,
      </if>
      <if test="integralConsumption != null" >
        Integral_consumption,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="integralTotal != null" >
        #{integralTotal,jdbcType=INTEGER},
      </if>
      <if test="integralResidual != null" >
        #{integralResidual,jdbcType=INTEGER},
      </if>
      <if test="integralConsumption != null" >
        #{integralConsumption,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.entity.TIntegral" resultType="java.lang.Integer" >
    select count(*) from t_integral
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_integral
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.integralTotal != null" >
        Integral_total = #{record.integralTotal,jdbcType=INTEGER},
      </if>
      <if test="record.integralResidual != null" >
        Integral_residual = #{record.integralResidual,jdbcType=INTEGER},
      </if>
      <if test="record.integralConsumption != null" >
        Integral_consumption = #{record.integralConsumption,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_integral
    set user_id = #{record.userId,jdbcType=INTEGER},
      Integral_total = #{record.integralTotal,jdbcType=INTEGER},
      Integral_residual = #{record.integralResidual,jdbcType=INTEGER},
      Integral_consumption = #{record.integralConsumption,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>