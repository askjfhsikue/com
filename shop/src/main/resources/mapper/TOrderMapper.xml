<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.dao.TOrderMapper">
  <resultMap id="BaseResultMap" type="test.entity.TOrder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="order_state" jdbcType="VARCHAR" property="orderState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, user_id, goods_id, order_state, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="test.entity.TOrder">
    insert into t_order (order_id, user_id, goods_id, 
      order_state, create_time)
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{orderState,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="test.entity.TOrder">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="test.entity.TOrder">
    update t_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.entity.TOrder">
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      order_state = #{orderState,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="test.entity.TOrder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="order_state" jdbcType="VARCHAR" property="orderState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="addres" jdbcType="VARCHAR" property="addres" />
    <result column="get_time" jdbcType="TIMESTAMP" property="getTime" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, user_id, goods_id, order_state, create_time, addres, get_time, goods_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="test.entity.TOrder">
    insert into t_order ( user_id, goods_id,
      order_state,  addres,
      get_time, goods_num)
    values ( #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
      #{orderState,jdbcType=VARCHAR}, #{addres,jdbcType=VARCHAR},
      '0', #{goodsNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="test.entity.TOrder">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="addres != null">
        addres,
      </if>
      <if test="getTime != null">
        get_time,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addres != null">
        #{addres,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="test.entity.TOrder">
    update t_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addres != null">
        addres = #{addres,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null">
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.entity.TOrder">
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      order_state = #{orderState,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      addres = #{addres,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      goods_num = #{goodsNum,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

  <!--expand-->
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_order
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectAllOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_order

  </select>
</mapper>